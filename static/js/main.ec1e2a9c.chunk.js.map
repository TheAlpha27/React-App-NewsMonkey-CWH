{"version":3,"sources":["Components/Navbar.js","Components/NewsItem.js","Components/spinner.gif","Components/Spinner.js","Components/News.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","style","marginTop","to","type","id","NewsItem","props","title","description","ImageURL","NewsURL","DatePub","width","src","alt","href","rel","target","Date","toGMTString","Spinner","loading","News","useState","articles","setArticles","setLoading","page","setPage","totalResults","setTotalResults","updateNews","a","ProgressFunc","url","country","category","apiKey","pageSize","fetch","data","json","parsedData","useEffect","str","fetchMoreData","concat","textAlign","charAt","toUpperCase","slice","dataLength","length","next","hasMore","loader","map","element","urlToImage","publishedAt","App","process","progress","setProgress","prog","color","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAsDeA,MAjDR,WACC,OACI,qBAAKC,UAAU,yDAAyDC,MAAO,CAACC,UAAW,OAA3F,SACI,sBAAKF,UAAU,kBAAf,UACI,cAAC,IAAD,CAAMA,UAAU,eAAeG,GAAG,IAAlC,wBACA,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACI,sBAAMJ,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,SACI,qBAAIL,UAAU,kCAAd,UACA,oBAAIA,UAAU,WAAd,SACQ,cAAC,IAAD,CAAMA,UAAU,WAAW,eAAa,OAAOG,GAAG,WAAlD,uBAEJ,oBAAIH,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAW,eAAa,OAAOG,GAAG,YAAlD,wBAEJ,oBAAIH,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAW,eAAa,OAAOG,GAAG,iBAAlD,6BAEJ,oBAAIH,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAW,eAAa,OAAOG,GAAG,UAAlD,sBAEJ,oBAAIH,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAW,eAAa,OAAOG,GAAG,cAAlD,0BAEJ,oBAAIH,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAW,eAAa,OAAOG,GAAG,WAAlD,uBAEJ,oBAAIH,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAW,eAAa,OAAOG,GAAG,UAAlD,iC,iCChCjB,SAASG,EAASC,GACzB,IAAMC,EAAmDD,EAAnDC,MAAOC,EAA4CF,EAA5CE,YAAaC,EAA+BH,EAA/BG,SAAUC,EAAqBJ,EAArBI,QAASC,EAAYL,EAAZK,QAC7C,OACI,sBAAKZ,UAAU,iBAAiBC,MAAO,CAACY,MAAO,SAA/C,UACI,qBAAKb,UAAU,WAAWc,IAAKJ,EAAUK,IAAI,QAC7C,sBAAKf,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BQ,IAC5B,oBAAGR,UAAU,YAAb,UAA0BS,EAA1B,YAEJ,sBAAKT,UAAU,UAAf,UACI,mBAAGgB,KAAML,EAASM,IAAI,aAAaC,OAAO,SAASlB,UAAU,2BAA7D,uBAAqG,oBAAGA,UAAU,aAAb,UAA0B,8CAA1B,IAAqD,IAAImB,KAAKP,GAASQ,uBCZjL,UAA0B,oCCE1B,SAASC,IAChB,OACI,qBAAKrB,UAAU,OAAf,SACI,qBAAKc,IAAKQ,EAASP,IAAI,cCDxB,SAASQ,EAAKhB,GACzB,MAAgCiB,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOF,EAAP,KAAgBK,EAAhB,KACA,EAAwBH,mBAAS,GAAjC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAAwCL,mBAAS,GAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KAEMC,EAAU,uCAAG,gCAAAC,EAAA,6DACf1B,EAAM2B,aAAa,IACbC,EAFS,uDAE6C5B,EAAM6B,QAFnD,qBAEuE7B,EAAM8B,SAF7E,mBAEgG9B,EAAM+B,OAFtG,iBAEqHV,EAFrH,qBAEsIrB,EAAMgC,UAC3JZ,GAAW,GACXpB,EAAM2B,aAAa,IAJJ,SAKEM,MAAML,GALR,cAKXM,EALW,OAMflC,EAAM2B,aAAa,IANJ,UAOQO,EAAKC,OAPb,QAOXC,EAPW,OAQfpC,EAAM2B,aAAa,IACnBR,EAAYiB,EAAWlB,UACvBE,GAAW,GACXI,EAAgBY,EAAWb,cAC3BvB,EAAM2B,aAAa,KAZJ,4CAAH,qDAehBU,qBAAU,WACNZ,MACD,IASH,IAWoBa,EAXdC,EAAa,uCAAG,gCAAAb,EAAA,6DACZE,EADY,uDAC0C5B,EAAM6B,QADhD,qBACoE7B,EAAM8B,SAD1E,mBAC6F9B,EAAM+B,OADnG,iBACkHV,EAAK,EADvH,qBACqIrB,EAAMgC,UAE7JV,EAAQD,EAAO,GACfD,GAAW,GAJO,SAKDa,MAAML,GALL,cAKdM,EALc,gBAMKA,EAAKC,OANV,OAMdC,EANc,OAOlBjB,EAAYD,EAASsB,OAAOJ,EAAWlB,WACvCE,GAAW,GACXI,EAAgBY,EAAWb,cATT,4CAAH,qDAcnB,OACI,qBAAK9B,UAAU,yCAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,qBAAIC,MAAO,CAAE+C,UAAW,UAAxB,+BAPIH,EAO6DtC,EAAM8B,SAN5EQ,EAAII,OAAO,GAAGC,cAAgBL,EAAIM,MAAM,SAQvC,qBAAKnD,UAAU,cAAf,SACKsB,GAAW,cAACD,EAAD,MAEhB,cAAC,IAAD,CAAgB+B,WAAY3B,EAAS4B,OAAQC,KAAMR,EAAeS,QAAS9B,EAAS4B,SAAWvB,EAAc0B,OAAQ,cAACnC,EAAD,IAArH,SACI,qBAAKrB,UAAU,kBAAf,SACI,qBAAKA,UAAU,qBAAf,SACKyB,EAASgC,KAAI,SAACC,GACX,OAAO,qBAAK1D,UAAU,wCAAf,SAEH,cAACM,EAAD,CAAUE,MAAOkD,EAAQlD,MAAOC,YAAaiD,EAAQjD,YAAciD,EAAQjD,YAAY0C,MAAM,EAAG,KAAO,GAAIzC,SAAUgD,EAAQC,WAAaD,EAAQC,WAAa,yEAA0EhD,QAAS+C,EAAQvB,IAAKvB,QAAS8C,EAAQE,eAFjNF,EAAQvB,mB,mBCpD5F,SAAS0B,IAEtB,IAAMvB,EAASwB,mCACf,EAAgCtC,mBAAS,IAAzC,mBAAOuC,EAAP,KAAiBC,EAAjB,KACMzB,EAAW,GACbL,EAAa,SAAC+B,GAChBD,EAAYC,IAEd,OACE,mCAAE,eAAC,IAAD,WACA,cAAC,EAAD,IACA,8BACE,cAAC,IAAD,CACEC,MAAM,UACNH,SAAUA,MAGd,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC7C,EAAD,CAAMe,OAAQA,EAAQJ,aAAcA,EAAyBK,SAAUA,EAAUH,QAAQ,KAAKC,SAAS,WAAjD,UAExD,cAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC7C,EAAD,CAAMe,OAAQA,EAAQJ,aAAcA,EAA6BK,SAAUA,EAAUH,QAAQ,KAAKC,SAAS,YAArD,cAExD,cAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,iBAAlB,SACE,cAAC7C,EAAD,CAAMe,OAAQA,EAAQJ,aAAcA,EAAkCK,SAAUA,EAAUH,QAAQ,KAAKC,SAAS,iBAA1D,mBAExD,cAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC7C,EAAD,CAAMe,OAAQA,EAAQJ,aAAcA,EAA4BK,SAAUA,EAAUH,QAAQ,KAAKC,SAAS,WAApD,aAExD,cAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC7C,EAAD,CAAMe,OAAQA,EAAQJ,aAAcA,EAA2BK,SAAUA,EAAUH,QAAQ,KAAKC,SAAS,UAAnD,YAExD,cAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC7C,EAAD,CAAMe,OAAQA,EAAQJ,aAAcA,EAA4BK,SAAUA,EAAUH,QAAQ,KAAKC,SAAS,WAApD,aAExD,cAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC7C,EAAD,CAAMe,OAAQA,EAAQJ,aAAcA,EAA2BK,SAAUA,EAAUH,QAAQ,KAAKC,SAAS,UAAnD,YAExD,cAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,cAAlB,SACE,cAAC7C,EAAD,CAAMe,OAAQA,EAAQJ,aAAcA,EAA+BK,SAAUA,EAAUH,QAAQ,KAAKC,SAAS,cAAvD,wBCpDhE,IAYegC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnB,EAAD,MAEFoB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ec1e2a9c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nexport function Navbar() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\" style={{marginTop: '0px'}}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">NewsMonkey</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" aria-current=\"page\" to=\"/general\">General</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" aria-current=\"page\" to=\"/business\">Business</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" aria-current=\"page\" to=\"/entertainment\">Entertainment</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" aria-current=\"page\" to=\"/sports\">Sports</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" aria-current=\"page\" to=\"/technology\">Technology</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" aria-current=\"page\" to=\"/science\">Science</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" aria-current=\"page\" to=\"/health\">Health</Link>\r\n                            </li>\r\n                            {/* <li className=\"nav-item dropdown\">\r\n                                    <a className=\"nav-link dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        Dropdown\r\n                                    </a>\r\n                                    <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                        <li><a className=\"dropdown-item\" to=\"#\">Action</a></li>\r\n                                        <li><a className=\"dropdown-item\" to=\"#\">Another action</a></li>\r\n                                        <li><hr className=\"dropdown-divider\" /></li>\r\n                                        <li><a className=\"dropdown-item\" to=\"#\">Something else here</a></li>\r\n                                    </ul>\r\n                                </li> */}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\nexport default Navbar","import React from 'react'\r\n\r\nexport default function NewsItem(props) {\r\n        let { title, description, ImageURL, NewsURL, DatePub } = props;\r\n        return (\r\n            <div className=\"card my-3 mx-3\" style={{width: '23rem'}}>\r\n                <img className=\"news-img\" src={ImageURL} alt=\"...\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{title}</h5>\r\n                    <p className=\"card-text\">{description}...</p>\r\n                </div>\r\n                <div className=\"dateDiv\">\r\n                    <a href={NewsURL} rel=\"noreferrer\" target=\"_blank\" className=\"btn btn-sm btn-dark read\">Read More</a><p className=\"dateString\"><strong>Updated:</strong> {new Date(DatePub).toGMTString()}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }","export default __webpack_public_path__ + \"static/media/spinner.f5230fe0.gif\";","import React from 'react'\r\nimport loading from './spinner.gif'\r\nexport default function Spinner () {\r\n        return (\r\n            <div className=\"spin\">\r\n                <img src={loading} alt=\"loading\" />\r\n            </div>\r\n        )\r\n    }","import React, { useState, useEffect } from 'react'\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport NewsItem from './NewsItem';\r\nimport Spinner from './Spinner';\r\nexport default function News(props) {\r\n    const [articles, setArticles] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n    const [totalResults, setTotalResults] = useState(0);\r\n\r\n    const updateNews = async () => {\r\n        props.ProgressFunc(10);\r\n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\r\n        setLoading(true);\r\n        props.ProgressFunc(30);\r\n        let data = await fetch(url);\r\n        props.ProgressFunc(40);\r\n        let parsedData = await data.json();\r\n        props.ProgressFunc(60);\r\n        setArticles(parsedData.articles);\r\n        setLoading(false);\r\n        setTotalResults(parsedData.totalResults);\r\n        props.ProgressFunc(100);\r\n    }\r\n    // componentDidMount() function allow to execute the react code in it when the component is added to the DOM\r\n    useEffect(() => {\r\n        updateNews();\r\n    }, [])\r\n    // handleNextClick = async () => {\r\n    //     setState({ page: page + 1 });\r\n    //     updateNews();\r\n    // }\r\n    // handlePrevClick = async () => {\r\n    //     setState({ page: page - 1 });\r\n    //     updateNews();\r\n    // }\r\n    const fetchMoreData = async () => {\r\n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page+1}&pageSize=${props.pageSize}`;\r\n        // solved the bug of concat articles by adding page+1 in the URL itself as the setPage is asynchronous so the URL fetches the same articles as the page was updated after some time. We update the page in URL and then use setPage to update the page state.\r\n        setPage(page + 1);\r\n        setLoading(true);\r\n        let data = await fetch(url);\r\n        let parsedData = await data.json();\r\n        setArticles(articles.concat(parsedData.articles));\r\n        setLoading(false);\r\n        setTotalResults(parsedData.totalResults);\r\n    }\r\n    const capitalize = (str) => {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n    return (\r\n        <div className=\"container-lg container-fluid my-2 py-3\">\r\n            <div className=\"row news-container\">\r\n                <div className=\"col-12 mt-2\">\r\n                    <h1 style={{ textAlign: 'center' }}>News Headlines!- {capitalize(props.category)}</h1>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    {loading && <Spinner />}\r\n                </div>\r\n                <InfiniteScroll dataLength={articles.length} next={fetchMoreData} hasMore={articles.length !== totalResults} loader={<Spinner />}>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row news-container\">\r\n                            {articles.map((element) => {\r\n                                return <div className=\"col-lg-4 col-md-6 news-card-container\" key={element.url}>\r\n                                    {/* if element is null then we cannot use slice so we have to use ternary operator */}\r\n                                    <NewsItem title={element.title} description={element.description ? element.description.slice(0, 100) : \"\"} ImageURL={element.urlToImage ? element.urlToImage : 'https://cdn.pixabay.com/photo/2015/02/15/09/33/news-636978_960_720.jpg'} NewsURL={element.url} DatePub={element.publishedAt} />\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </InfiniteScroll>\r\n                {/* <hr />\r\n                    <div className=\"col-12 d-flex justify-content-evenly mt-2\">\r\n                        <button type='button' onClick={handlePrevClick} disabled={page <= 1} className=\"btn-dark\">&larr; Previous</button>\r\n                        <button type='button' onClick={handleNextClick} disabled={page + 1 > Math.ceil(totalArticles / props.pageSize)} className=\"btn-dark\">Next &rarr;</button>\r\n                    </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './index.css';\r\nimport React, { useState } from 'react'\r\nimport Navbar from './Components/Navbar';\r\nimport News from './Components/News';\r\nimport LoadingBar from 'react-top-loading-bar'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n  //created a local environment variable for news api key for security and integrity\r\n  const apiKey = process.env.REACT_APP_NEWS_API;\r\n  const [progress, setProgress] = useState(10);\r\n  const pageSize = 12;\r\n  let ProgressFunc=(prog)=>{\r\n    setProgress(prog);\r\n  }\r\n  return (\r\n    <><Router>\r\n      <Navbar />\r\n      <div>\r\n        <LoadingBar\r\n          color='#f11946'\r\n          progress={progress}\r\n        />\r\n      </div>\r\n      <Switch>\r\n        {/* we will have to use 'exact' keyword for path and pass a unique key in each news component to make routing work */}\r\n        <Route exact path=\"/\">\r\n          <News apiKey={apiKey} ProgressFunc={ProgressFunc} key=\"home\" pageSize={pageSize} country='in' category='general' />\r\n        </Route>\r\n        <Route exact path=\"/business\">\r\n          <News apiKey={apiKey} ProgressFunc={ProgressFunc} key=\"business\" pageSize={pageSize} country='in' category='business' />\r\n        </Route>\r\n        <Route exact path=\"/entertainment\">\r\n          <News apiKey={apiKey} ProgressFunc={ProgressFunc} key=\"entertainment\" pageSize={pageSize} country='in' category='entertainment' />\r\n        </Route>\r\n        <Route exact path=\"/general\">\r\n          <News apiKey={apiKey} ProgressFunc={ProgressFunc} key=\"general\" pageSize={pageSize} country='in' category='general' />\r\n        </Route>\r\n        <Route exact path=\"/health\">\r\n          <News apiKey={apiKey} ProgressFunc={ProgressFunc} key=\"health\" pageSize={pageSize} country='in' category='health' />\r\n        </Route>\r\n        <Route exact path=\"/science\">\r\n          <News apiKey={apiKey} ProgressFunc={ProgressFunc} key=\"science\" pageSize={pageSize} country='in' category='science' />\r\n        </Route>\r\n        <Route exact path=\"/sports\">\r\n          <News apiKey={apiKey} ProgressFunc={ProgressFunc} key=\"sports\" pageSize={pageSize} country='in' category='sports' />\r\n        </Route>\r\n        <Route exact path=\"/technology\">\r\n          <News apiKey={apiKey} ProgressFunc={ProgressFunc} key=\"technology\" pageSize={pageSize} country='in' category='technology' />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n    </>\r\n  )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}